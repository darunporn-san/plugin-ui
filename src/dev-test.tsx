import React, { useState } from 'react';
import { PluginProvider, Button, Input } from './components';
import { defaultTheme, darkTheme } from './utils/theme';

// ‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö development ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á build
const DevTest: React.FC = () => {
  const [name, setName] = useState('');
  const [isDark, setIsDark] = useState(false);

  const pluginConfig = {
    name: 'Development Test',
    version: '1.0.0',
    description: 'Testing plugin components during development',
  };

  const handleAction = (action: string, payload?: any) => {
    console.log('Action:', action, payload);
    alert(`Action: ${action} with payload: ${JSON.stringify(payload)}`);
  };

  return (
    <PluginProvider 
      config={pluginConfig} 
      theme={isDark ? darkTheme : defaultTheme}
      onAction={handleAction}
    >
      <div style={{ padding: '20px', maxWidth: '400px', margin: '0 auto' }}>
        <h1>Plugin Development Test</h1>
        
        <Button
          variant="outline"
          size="sm"
          onClick={() => setIsDark(!isDark)}
          style={{ marginBottom: '20px' }}
        >
          {isDark ? '‚òÄÔ∏è Light Mode' : 'üåô Dark Mode'}
        </Button>

        <Input
          label="‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì"
          placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠..."
          value={name}
          onChange={setName}
        />

        <div style={{ display: 'flex', gap: '10px', marginTop: '10px' }}>
          <Button
            variant="primary"
            onClick={() => handleAction('submit', { name })}
          >
            ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
          </Button>
          
          <Button
            variant="secondary"
            onClick={() => setName('')}
          >
            ‡∏•‡πâ‡∏≤‡∏á
          </Button>
        </div>

        <div style={{ marginTop: '20px', fontSize: '0.875rem', opacity: 0.7 }}>
          <p>üîß Development Mode</p>
          <p>Theme: {isDark ? 'Dark' : 'Light'}</p>
          <p>Name: {name || '‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏Å‡∏£‡∏≠‡∏Å'}</p>
        </div>
      </div>
    </PluginProvider>
  );
};

export default DevTest;
